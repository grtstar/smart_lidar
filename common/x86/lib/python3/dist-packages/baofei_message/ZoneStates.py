"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct
import json

import baofei_message.ZoneState

class ZoneStates(object):
    __slots__ = ["mapSign", "count", "zoneState"]

    __typenames__ = ["int32_t", "int8_t", "baofei_message.ZoneState"]

    __dimensions__ = [None, None, None]

    def __init__(self):
        self.mapSign = 0
        self.count = 0
        self.zoneState = baofei_message.ZoneState()

    def encode(self):
        buf = BytesIO()
        buf.write(ZoneStates._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">ib", self.mapSign, self.count))
        assert self.zoneState._get_packed_fingerprint() == baofei_message.ZoneState._get_packed_fingerprint()
        self.zoneState._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != ZoneStates._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ZoneStates._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ZoneStates()
        self.mapSign, self.count = struct.unpack(">ib", buf.read(5))
        self.zoneState = baofei_message.ZoneState._decode_one(buf)
        return self
    _decode_one = staticmethod(_decode_one)

    def _get_hash_recursive(parents):
        if ZoneStates in parents: return 0
        newparents = parents + [ZoneStates]
        tmphash = (0x5f925268e9029705+ baofei_message.ZoneState._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ZoneStates._packed_fingerprint is None:
            ZoneStates._packed_fingerprint = struct.pack(">Q", ZoneStates._get_hash_recursive([]))
        return ZoneStates._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

    def get_hash(self):
        """Get the LCM hash of the struct"""
        return struct.unpack(">Q", ZoneStates._get_packed_fingerprint())[0]

    def from_dict(self, j):
        self.mapSign = j["mapSign"]
        self.count = j["count"]
        self.zoneState.from_dict(j["zoneState"])

    def to_dict(self):
        j = {}
        j["mapSign"] = self.mapSign
        j["count"] = self.count
        j["zoneState"] = self.zoneState.to_dict()
        return j

